version: '3.1'

volumes:
  geonetwork4:
  esdata9:
  pgdata:
  pglog:
  nginxlog:
  apachelog:


networks:
  gn-network:
    driver: bridge


services:
  # comment this out only if it's needed
  # zeppelin:
  #   image: apache/zeppelin:0.9.0
  #   container_name: zeppelin
  #   volumes: 
  #     - ./shiro-geonetwork/geonetwork-integration/target/testshiro-1.0-SNAPSHOT-jar-with-dependencies.jar:/zeppelin/lib/testshiro-1.0-SNAPSHOT-jar-with-dependencies.jar
  #     - ./zeppelin/zeppelin-notebook:/zeppelin/notebook
  #     - ./zeppelin/zeppelin-logs:/zeppelin/logs
  #     - ./shiro-geonetwork/lib/postgresql-42.2.12.jar:/zeppelin/lib/postgresql-42.2.12.jar
  #     - ./shiro-geonetwork/conf/shiro.ini:/zeppelin/conf/shiro.ini
  #     - ./zeppelin/zeppelin-conf/interpreter-setting.json:/zeppelin/interpreter/jdbc/interpreter-setting.json
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - "ZEPPELIN_INTERPRETER_OUTPUT_LIMIT=10490000"
  #     - "ZEPPELIN_INTERPRETER_INCLUDE=jdbc"  
  #     - "ZEPPELIN_INTERPRETER_GROUP_DEFAULT=jdbc"
  #   expose:
  #     - "8081"
  #   networks:
  #     - gn-network
  #   restart: unless-stopped


  database:
    image: mdillon/postgis
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geonetwork
    command: [ "postgres",
               "-c", "log_statement=all",
               "-c", "logging_collector=true",
               "-c", "log_file_mode=0644",
               "-c", "log_directory=/var/log/postgresql",
               "-c", "log_filename=postgresql.log" ]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/log/postgresql
    networks:
      - gn-network


  geonetwork:
    image: geonetwork:4.0.2
    #image: geonetwork:3.10.6
    #image: public.ecr.aws/y7x5j6q3/os-custom-geonetwork:latest
    restart: always
    ports:
      - 8080:8080
    environment:
      DATA_DIR: /catalogue-data

      JAVA_OPTS:
        -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
        -Dgeonetwork.resources.dir=/catalogue-data/resources
        -Dgeonetwork.data.dir=/catalogue-data
        -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist
        -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins

      ES_HOST: elasticsearch
      ES_PROTOCOL: http
      ES_PORT: 9200

      KB_URL: http://kibana:5601

      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: database
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: geonetwork
      GEONETWORK_DB_USERNAME: geonetwork
      GEONETWORK_DB_PASSWORD: geonetwork
    volumes:
      - geonetwork4:/catalogue-data
      # - /home/jo/Git/iso19139.gemini23/src/main/plugin/iso19139.gemini23:/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins/iso19139.gemini23
      # - /home/jo/Git/iso19139.nonspatial/src/main/plugin/iso19139.nonspatial:/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins/iso19139.nonspatial
      # - /home/jo/Git/dcat2/src/main/plugin/dcat2:/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins/dcat2
      # - /home/jo/Git/iso19139.gemini23/target/schema-iso19139.gemini23-3.7.jar:/var/lib/jetty/webapps/geonetwork/WEB-INF/lib/schema-iso19139.gemini23-3.7.jar
      # - /home/jo/Git/iso19139.nonspatial/target/schema-iso19139.nonspatial-3.7.jar:/var/lib/jetty/webapps/geonetwork/WEB-INF/lib/schema-iso19139.nonspatial-3.7.jar
      - /home/jo/Git/iso19139.gemini23/src/main/plugin/iso19139.gemini23:/usr/local/tomcat/webapps/geonetwork/WEB-INF/data/config/schema_plugins/iso19139.gemini23
      - /home/jo/Git/iso19139.nonspatial/src/main/plugin/iso19139.nonspatial:/usr/local/tomcat/webapps/geonetwork/WEB-INF/data/config/schema_plugins/iso19139.nonspatial
      - /home/jo/Git/dcat2/src/main/plugin/dcat2:/usr/local/tomcat/webapps/geonetwork/WEB-INF/data/config/schema_plugins/dcat2
      - /home/jo/Git/iso19139.gemini23/target/schema-iso19139.gemini23-3.7.jar:/usr/local/tomcat/webapps/geonetwork/WEB-INF/lib/schema-iso19139.gemini23-3.7.jar
      - /home/jo/Git/iso19139.nonspatial/target/schema-iso19139.nonspatial-3.7.jar:/usr/local/tomcat/webapps/geonetwork/WEB-INF/lib/schema-iso19139.nonspatial-3.7.jar
      - ./odi-customisations/geonetwork/catalog/locales/en-custom.json:/usr/local/tomcat/webapps/geonetwork/catalog/locales/en-custom.json
    depends_on:
      - elasticsearch
      - database
    networks:
      - gn-network


  elasticsearch:
    image: elasticsearch:7.9.2
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      ES_JAVA_OPTS: "-Xms1G -Xmx1G"
      discovery.type: single-node
    volumes:
      - esdata9:/usr/share/elasticsearch/data
    networks:
      - gn-network

  kibana:
    image: kibana:7.9.2
    environment:
      SERVER_NAME: 'kibana'
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /geonetwork/dashboards
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
    networks:
      - gn-network

  nginx:
    image: nginx
    volumes:
      - /home/ec2-user/nginx/root/robots.txt:/var/www/html/robots.txt
      - /home/ec2-user/nginx/default.local:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - gn-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/robots.txt || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 5