version: '2.2'
services:
  geonetwork:
    build:
      context: .
    container_name: customgeonetwork
    volumes:
      - ./geonetwork/jdbc.properties:/usr/local/tomcat/webapps/geonetwork/WEB-INF/config-db/jdbc.properties
      - ./geonetwork/srv.xml:/usr/local/tomcat/webapps/geonetwork/WEB-INF/config-node/srv.xml
    ports:
      - "8080:8080"
    networks:
      - esnet
    # restart: unless-stopped
    environment:
      #DATA_DIR: /var/lib/geonetwork_data
      #CATALINA_HOME: /var/lib/tomcat8
      ES_HOST: elasticsearch
      ES_PROTOCOL: http
      ES_PORT: 9200
      KB_URL: http://kibana:5601
    env_file:
      - .env
    depends_on:
      - kibana
      - elasticsearch

  elasticsearch:
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    build: 
      context: elasticsearch/.
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    expose:
      - "9200"
    networks:
      - esnet
    # restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    expose:
      - "5601"
    networks:
      - esnet
  #   restart: unless-stopped

  zeppelin:
    image: apache/zeppelin:0.9.0
    container_name: zeppelin
    volumes: 
      - ./shiro-geonetwork/geonetwork-integration/target/testshiro-1.0-SNAPSHOT-jar-with-dependencies.jar:/zeppelin/lib/testshiro-1.0-SNAPSHOT-jar-with-dependencies.jar
      - ./zeppelin/zeppelin-notebook:/zeppelin/notebook
      - ./zeppelin/zeppelin-logs:/zeppelin/logs
      - ./shiro-geonetwork/lib/postgresql-42.2.12.jar:/zeppelin/lib/postgresql-42.2.12.jar
      - ./shiro-geonetwork/conf/shiro.ini:/zeppelin/conf/shiro.ini
      - ./zeppelin/zeppelin-conf/interpreter-setting.json:/zeppelin/interpreter/jdbc/interpreter-setting.json
    ports:
      - "8081:8080"
    environment:
      - "ZEPPELIN_INTERPRETER_OUTPUT_LIMIT=10490000"
      - "ZEPPELIN_INTERPRETER_INCLUDE=jdbc"  
      - "ZEPPELIN_INTERPRETER_GROUP_DEFAULT=jdbc"
    expose:
      - "8081"
    networks:
      - esnet
    restart: unless-stopped

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/default:/etc/nginx/conf.d/default
    ports:
      - "80:80"
    expose:
      - "80"
    networks:
      - esnet

    
volumes:
  esdata:
    driver: local

networks:
  esnet:
    driver: bridge
